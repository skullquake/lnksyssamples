#!/bin/env bash
printf "________________________________________\n"
printf "ONE TO ONE DEMO\n"
printf "________________________________________\n"
curl\
	http://localhost:1111/lib/sjs/tst/db000.js\
	-X POST\
	-H "Content-type: application/json" \
	--data \
'{
	"action":"query",
	"params":{
		"fmt":"csv",
		"query":[
"DO $$",
"DECLARE",
"    idxcls0  integer:=0;",
"    idxcls2  integer:=0;",
"    ncls0    integer:=2;",
"    ncls2    integer:=2;",
"    _cls0_id integer;",
"BEGIN",
"    -- output",
"    create temporary table _output(a int) on commit drop;",
"    -- reinit",
"    drop table if exists cls0 cascade;",
"    drop table if exists cls1 cascade;",
"    drop table if exists cls2 cascade;",
"    -- root",
"    create table cls0(",
"        cls0_id serial primary key,",
"        value int",
"    );",
"    -- one-to-one",
"    create table cls1(",
"        cls1_id serial primary key not null,",
"        cls0_id int unique references cls0(cls0_id) on delete cascade,",
"        value int",
"    );",
"    -- one-to-many",
"    create table cls2(",
"        cls2_id serial primary key not null,",
"        cls0_id int references cls0(cls0_id) on delete cascade,",
"        value int",
"    );",
"    LOOP",
"        EXIT WHEN idxcls0=ncls0;",
"        -- populate root",
"        insert into cls0(",
"            value",
"        )values(",
"            idxcls0*10",
"        ) returning cls0_id into _cls0_id;",
"        -- populate one-to-one",
"        insert into cls1(",
"            value,",
"            cls0_id",
"        )values(",
"            idxcls0*100,",
"            _cls0_id",
"        );",
"        -- reset inner counter",
"        idxcls2=0;",
"        LOOP",
"            EXIT WHEN idxcls2=ncls2;",
"            -- populate one-to-one",
"            insert into cls2(",
"                value,",
"                cls0_id",
"            )values(",
"                (idxcls0*ncls0+idxcls2)*1000,",
"                _cls0_id",
"            );",
"            idxcls2=idxcls2+1;",
"        END LOOP;",
"       idxcls0=idxcls0+1;",
"    END LOOP;",
"END $$;",
"-- select cls0.cls0_id,cls0.value,cls1.value from cls0 left outer join cls1 on cls0.cls0_id=cls1.cls0_id;",
"select ",
"    cls0.cls0_id,",
"    cls0.value,",
"    cls2.value",
"from cls0",
"left outer join",
"    cls2",
"on",
"    cls0.cls0_id=cls2.cls0_id",
";",
"-- select * from cls0;",
""
		],
		"args":{
		}
	}
}'
